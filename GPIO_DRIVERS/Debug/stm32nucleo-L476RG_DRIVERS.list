
stm32nucleo-L476RG_DRIVERS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000184  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000051c  08000184  08000184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006a0  080006a8  000016a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006a0  080006a0  000016a8  2**0
                  CONTENTS
  4 .ARM          00000000  080006a0  080006a0  000016a8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006a0  080006a8  000016a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006a0  080006a0  000016a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080006a4  080006a4  000016a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000016a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  000016a8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000016a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   000008a4  00000000  00000000  000016d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000261  00000000  00000000  00001f76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  000021d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000072  00000000  00000000  00002280  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001363  00000000  00000000  000022f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000cf2  00000000  00000000  00003655  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000051fd  00000000  00000000  00004347  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00009544  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001d4  00000000  00000000  00009588  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000058  00000000  00000000  0000975c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	@ (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4b04      	ldr	r3, [pc, #16]	@ (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b113      	cbz	r3, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2301      	movs	r3, #1
 8000198:	7023      	strb	r3, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	20000000 	.word	0x20000000
 80001a0:	00000000 	.word	0x00000000
 80001a4:	08000688 	.word	0x08000688

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b03      	ldr	r3, [pc, #12]	@ (80001b8 <frame_dummy+0x10>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4903      	ldr	r1, [pc, #12]	@ (80001bc <frame_dummy+0x14>)
 80001b0:	4803      	ldr	r0, [pc, #12]	@ (80001c0 <frame_dummy+0x18>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	bd08      	pop	{r3, pc}
 80001b8:	00000000 	.word	0x00000000
 80001bc:	20000004 	.word	0x20000004
 80001c0:	08000688 	.word	0x08000688

080001c4 <GPIO_PeriClockControl>:
/*
 *
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001c4:	b480      	push	{r7}
 80001c6:	b083      	sub	sp, #12
 80001c8:	af00      	add	r7, sp, #0
 80001ca:	6078      	str	r0, [r7, #4]
 80001cc:	460b      	mov	r3, r1
 80001ce:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001d0:	78fb      	ldrb	r3, [r7, #3]
 80001d2:	2b01      	cmp	r3, #1
 80001d4:	d157      	bne.n	8000286 <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 80001d6:	687b      	ldr	r3, [r7, #4]
 80001d8:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80001dc:	d106      	bne.n	80001ec <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80001de:	4b58      	ldr	r3, [pc, #352]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80001e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80001e2:	4a57      	ldr	r2, [pc, #348]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80001e4:	f043 0301 	orr.w	r3, r3, #1
 80001e8:	64d3      	str	r3, [r2, #76]	@ 0x4c
		{
			GPIOH_PCLK_DI();
		}
	}

}
 80001ea:	e0a3      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOB)
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	4a55      	ldr	r2, [pc, #340]	@ (8000344 <GPIO_PeriClockControl+0x180>)
 80001f0:	4293      	cmp	r3, r2
 80001f2:	d106      	bne.n	8000202 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80001f4:	4b52      	ldr	r3, [pc, #328]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80001f6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80001f8:	4a51      	ldr	r2, [pc, #324]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80001fa:	f043 0302 	orr.w	r3, r3, #2
 80001fe:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000200:	e098      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOC)
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	4a50      	ldr	r2, [pc, #320]	@ (8000348 <GPIO_PeriClockControl+0x184>)
 8000206:	4293      	cmp	r3, r2
 8000208:	d106      	bne.n	8000218 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800020a:	4b4d      	ldr	r3, [pc, #308]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800020c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800020e:	4a4c      	ldr	r2, [pc, #304]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000210:	f043 0304 	orr.w	r3, r3, #4
 8000214:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000216:	e08d      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOD)
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	4a4c      	ldr	r2, [pc, #304]	@ (800034c <GPIO_PeriClockControl+0x188>)
 800021c:	4293      	cmp	r3, r2
 800021e:	d106      	bne.n	800022e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000220:	4b47      	ldr	r3, [pc, #284]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000222:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000224:	4a46      	ldr	r2, [pc, #280]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000226:	f043 0308 	orr.w	r3, r3, #8
 800022a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800022c:	e082      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOE)
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	4a47      	ldr	r2, [pc, #284]	@ (8000350 <GPIO_PeriClockControl+0x18c>)
 8000232:	4293      	cmp	r3, r2
 8000234:	d106      	bne.n	8000244 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000236:	4b42      	ldr	r3, [pc, #264]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000238:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800023a:	4a41      	ldr	r2, [pc, #260]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800023c:	f043 0310 	orr.w	r3, r3, #16
 8000240:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000242:	e077      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOF)
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	4a43      	ldr	r2, [pc, #268]	@ (8000354 <GPIO_PeriClockControl+0x190>)
 8000248:	4293      	cmp	r3, r2
 800024a:	d106      	bne.n	800025a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800024c:	4b3c      	ldr	r3, [pc, #240]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800024e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000250:	4a3b      	ldr	r2, [pc, #236]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000252:	f043 0320 	orr.w	r3, r3, #32
 8000256:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000258:	e06c      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOG)
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	4a3e      	ldr	r2, [pc, #248]	@ (8000358 <GPIO_PeriClockControl+0x194>)
 800025e:	4293      	cmp	r3, r2
 8000260:	d106      	bne.n	8000270 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000262:	4b37      	ldr	r3, [pc, #220]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000264:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000266:	4a36      	ldr	r2, [pc, #216]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000268:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800026c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800026e:	e061      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOH)
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	4a3a      	ldr	r2, [pc, #232]	@ (800035c <GPIO_PeriClockControl+0x198>)
 8000274:	4293      	cmp	r3, r2
 8000276:	d15d      	bne.n	8000334 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 8000278:	4b31      	ldr	r3, [pc, #196]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800027a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800027c:	4a30      	ldr	r2, [pc, #192]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800027e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000282:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000284:	e056      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800028c:	d106      	bne.n	800029c <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 800028e:	4b2c      	ldr	r3, [pc, #176]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000290:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000292:	4a2b      	ldr	r2, [pc, #172]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000294:	f023 0301 	bic.w	r3, r3, #1
 8000298:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800029a:	e04b      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOB)
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	4a29      	ldr	r2, [pc, #164]	@ (8000344 <GPIO_PeriClockControl+0x180>)
 80002a0:	4293      	cmp	r3, r2
 80002a2:	d106      	bne.n	80002b2 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80002a4:	4b26      	ldr	r3, [pc, #152]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002a6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002a8:	4a25      	ldr	r2, [pc, #148]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002aa:	f023 0302 	bic.w	r3, r3, #2
 80002ae:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002b0:	e040      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOC)
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	4a24      	ldr	r2, [pc, #144]	@ (8000348 <GPIO_PeriClockControl+0x184>)
 80002b6:	4293      	cmp	r3, r2
 80002b8:	d106      	bne.n	80002c8 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80002ba:	4b21      	ldr	r3, [pc, #132]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002bc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002be:	4a20      	ldr	r2, [pc, #128]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002c0:	f023 0304 	bic.w	r3, r3, #4
 80002c4:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002c6:	e035      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOD)
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	4a20      	ldr	r2, [pc, #128]	@ (800034c <GPIO_PeriClockControl+0x188>)
 80002cc:	4293      	cmp	r3, r2
 80002ce:	d106      	bne.n	80002de <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 80002d0:	4b1b      	ldr	r3, [pc, #108]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002d2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002d4:	4a1a      	ldr	r2, [pc, #104]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002d6:	f023 0308 	bic.w	r3, r3, #8
 80002da:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002dc:	e02a      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOE)
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a1b      	ldr	r2, [pc, #108]	@ (8000350 <GPIO_PeriClockControl+0x18c>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 80002e6:	4b16      	ldr	r3, [pc, #88]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002ea:	4a15      	ldr	r2, [pc, #84]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002ec:	f023 0310 	bic.w	r3, r3, #16
 80002f0:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002f2:	e01f      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOF)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a17      	ldr	r2, [pc, #92]	@ (8000354 <GPIO_PeriClockControl+0x190>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 80002fc:	4b10      	ldr	r3, [pc, #64]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 80002fe:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000300:	4a0f      	ldr	r2, [pc, #60]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000302:	f023 0320 	bic.w	r3, r3, #32
 8000306:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000308:	e014      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOG)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a12      	ldr	r2, [pc, #72]	@ (8000358 <GPIO_PeriClockControl+0x194>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8000312:	4b0b      	ldr	r3, [pc, #44]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000314:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000316:	4a0a      	ldr	r2, [pc, #40]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 8000318:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800031c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800031e:	e009      	b.n	8000334 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx ==GPIOH)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a0e      	ldr	r2, [pc, #56]	@ (800035c <GPIO_PeriClockControl+0x198>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d105      	bne.n	8000334 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000328:	4b05      	ldr	r3, [pc, #20]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800032a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800032c:	4a04      	ldr	r2, [pc, #16]	@ (8000340 <GPIO_PeriClockControl+0x17c>)
 800032e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000332:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000334:	bf00      	nop
 8000336:	370c      	adds	r7, #12
 8000338:	46bd      	mov	sp, r7
 800033a:	bc80      	pop	{r7}
 800033c:	4770      	bx	lr
 800033e:	bf00      	nop
 8000340:	40021000 	.word	0x40021000
 8000344:	48000400 	.word	0x48000400
 8000348:	48000800 	.word	0x48000800
 800034c:	48000c00 	.word	0x48000c00
 8000350:	48001000 	.word	0x48001000
 8000354:	48001400 	.word	0x48001400
 8000358:	48001800 	.word	0x48001800
 800035c:	48001c00 	.word	0x48001c00

08000360 <GPIO_Init>:




void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000360:	b480      	push	{r7}
 8000362:	b085      	sub	sp, #20
 8000364:	af00      	add	r7, sp, #0
 8000366:	6078      	str	r0, [r7, #4]
	//1. Configure the mode of the GPIO pin
	uint32_t temp=0;
 8000368:	2300      	movs	r3, #0
 800036a:	60fb      	str	r3, [r7, #12]
	if (pGPIOHandle->GPIO_PinConig.GPIO_PinMode<= GPIO_MODE_ANALOG)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	795b      	ldrb	r3, [r3, #5]
 8000370:	2b03      	cmp	r3, #3
 8000372:	d821      	bhi.n	80003b8 <GPIO_Init+0x58>
	{
		//the non interrupt mode of GPIO pGPIOx->MODER &= ~(0x3 << (2 * PinNumber));

		temp=(pGPIOHandle->GPIO_PinConig.GPIO_PinMode <<(2 *pGPIOHandle->GPIO_PinConig.GPIO_PinNumber));
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	795b      	ldrb	r3, [r3, #5]
 8000378:	461a      	mov	r2, r3
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	791b      	ldrb	r3, [r3, #4]
 800037e:	005b      	lsls	r3, r3, #1
 8000380:	fa02 f303 	lsl.w	r3, r2, r3
 8000384:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &=~(0x3 << 2*pGPIOHandle->GPIO_PinConig.GPIO_PinNumber);		//clearing
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	681a      	ldr	r2, [r3, #0]
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	791b      	ldrb	r3, [r3, #4]
 8000390:	005b      	lsls	r3, r3, #1
 8000392:	2103      	movs	r1, #3
 8000394:	fa01 f303 	lsl.w	r3, r1, r3
 8000398:	43db      	mvns	r3, r3
 800039a:	4619      	mov	r1, r3
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	400a      	ands	r2, r1
 80003a2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;														//setting
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	6819      	ldr	r1, [r3, #0]
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	68fa      	ldr	r2, [r7, #12]
 80003b0:	430a      	orrs	r2, r1
 80003b2:	601a      	str	r2, [r3, #0]
		temp=0;
 80003b4:	2300      	movs	r3, #0
 80003b6:	60fb      	str	r3, [r7, #12]
	}
	else{
		//later
	}

	temp=0;
 80003b8:	2300      	movs	r3, #0
 80003ba:	60fb      	str	r3, [r7, #12]
	//2. Configure the speed
	temp= (pGPIOHandle->GPIO_PinConig.GPIO_PinSpeed <<(2 *pGPIOHandle->GPIO_PinConig.GPIO_PinNumber));
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	799b      	ldrb	r3, [r3, #6]
 80003c0:	461a      	mov	r2, r3
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	791b      	ldrb	r3, [r3, #4]
 80003c6:	005b      	lsls	r3, r3, #1
 80003c8:	fa02 f303 	lsl.w	r3, r2, r3
 80003cc:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &=~(0x3 << 2*pGPIOHandle->GPIO_PinConig.GPIO_PinNumber);			//clearing
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	689a      	ldr	r2, [r3, #8]
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	791b      	ldrb	r3, [r3, #4]
 80003d8:	005b      	lsls	r3, r3, #1
 80003da:	2103      	movs	r1, #3
 80003dc:	fa01 f303 	lsl.w	r3, r1, r3
 80003e0:	43db      	mvns	r3, r3
 80003e2:	4619      	mov	r1, r3
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	400a      	ands	r2, r1
 80003ea:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;														//setting
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	6899      	ldr	r1, [r3, #8]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	68fa      	ldr	r2, [r7, #12]
 80003f8:	430a      	orrs	r2, r1
 80003fa:	609a      	str	r2, [r3, #8]

	temp=0;
 80003fc:	2300      	movs	r3, #0
 80003fe:	60fb      	str	r3, [r7, #12]
	//3. Configure the pupd settings
	temp= (pGPIOHandle->GPIO_PinConig.GPIO_PinPuPdContol <<(2 *pGPIOHandle->GPIO_PinConig.GPIO_PinNumber));
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	79db      	ldrb	r3, [r3, #7]
 8000404:	461a      	mov	r2, r3
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	791b      	ldrb	r3, [r3, #4]
 800040a:	005b      	lsls	r3, r3, #1
 800040c:	fa02 f303 	lsl.w	r3, r2, r3
 8000410:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &=~(0x3 << 2*pGPIOHandle->GPIO_PinConig.GPIO_PinNumber);			//clearing
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	68da      	ldr	r2, [r3, #12]
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	791b      	ldrb	r3, [r3, #4]
 800041c:	005b      	lsls	r3, r3, #1
 800041e:	2103      	movs	r1, #3
 8000420:	fa01 f303 	lsl.w	r3, r1, r3
 8000424:	43db      	mvns	r3, r3
 8000426:	4619      	mov	r1, r3
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	400a      	ands	r2, r1
 800042e:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;															//setting
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	68d9      	ldr	r1, [r3, #12]
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	68fa      	ldr	r2, [r7, #12]
 800043c:	430a      	orrs	r2, r1
 800043e:	60da      	str	r2, [r3, #12]

	temp=0;
 8000440:	2300      	movs	r3, #0
 8000442:	60fb      	str	r3, [r7, #12]
	//4. Configure the optype
	temp= (pGPIOHandle->GPIO_PinConig.GPIO_PinOPType <<pGPIOHandle->GPIO_PinConig.GPIO_PinNumber);
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	7a1b      	ldrb	r3, [r3, #8]
 8000448:	461a      	mov	r2, r3
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	791b      	ldrb	r3, [r3, #4]
 800044e:	fa02 f303 	lsl.w	r3, r2, r3
 8000452:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &=~(0x1 << pGPIOHandle->GPIO_PinConig.GPIO_PinNumber);			//clearing
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	685a      	ldr	r2, [r3, #4]
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	791b      	ldrb	r3, [r3, #4]
 800045e:	4619      	mov	r1, r3
 8000460:	2301      	movs	r3, #1
 8000462:	408b      	lsls	r3, r1
 8000464:	43db      	mvns	r3, r3
 8000466:	4619      	mov	r1, r3
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	400a      	ands	r2, r1
 800046e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;														//setting
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	6859      	ldr	r1, [r3, #4]
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	68fa      	ldr	r2, [r7, #12]
 800047c:	430a      	orrs	r2, r1
 800047e:	605a      	str	r2, [r3, #4]

	//5. Configure the alt function
	if (pGPIOHandle->GPIO_PinConig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	795b      	ldrb	r3, [r3, #5]
 8000484:	2b02      	cmp	r3, #2
 8000486:	d130      	bne.n	80004ea <GPIO_Init+0x18a>
	{
		//CONFIGURE ONLY IF THE ALT FUNCTION REGISTERS.
		uint8_t temp1,temp2;

		temp1 = pGPIOHandle->GPIO_PinConig.GPIO_PinNumber/8;
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	791b      	ldrb	r3, [r3, #4]
 800048c:	08db      	lsrs	r3, r3, #3
 800048e:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConig.GPIO_PinNumber%8;
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	791b      	ldrb	r3, [r3, #4]
 8000494:	f003 0307 	and.w	r3, r3, #7
 8000498:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (0xF<< (4* temp2));													//clearing
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	7afa      	ldrb	r2, [r7, #11]
 80004a0:	3208      	adds	r2, #8
 80004a2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004a6:	7abb      	ldrb	r3, [r7, #10]
 80004a8:	009b      	lsls	r3, r3, #2
 80004aa:	220f      	movs	r2, #15
 80004ac:	fa02 f303 	lsl.w	r3, r2, r3
 80004b0:	4618      	mov	r0, r3
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	7afa      	ldrb	r2, [r7, #11]
 80004b8:	4301      	orrs	r1, r0
 80004ba:	3208      	adds	r2, #8
 80004bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConig.GPIO_PinAltFunMode << (4* temp2));		//setting
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	7afa      	ldrb	r2, [r7, #11]
 80004c6:	3208      	adds	r2, #8
 80004c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	7a5b      	ldrb	r3, [r3, #9]
 80004d0:	461a      	mov	r2, r3
 80004d2:	7abb      	ldrb	r3, [r7, #10]
 80004d4:	009b      	lsls	r3, r3, #2
 80004d6:	fa02 f303 	lsl.w	r3, r2, r3
 80004da:	4618      	mov	r0, r3
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	7afa      	ldrb	r2, [r7, #11]
 80004e2:	4301      	orrs	r1, r0
 80004e4:	3208      	adds	r2, #8
 80004e6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}

}
 80004ea:	bf00      	nop
 80004ec:	3714      	adds	r7, #20
 80004ee:	46bd      	mov	sp, r7
 80004f0:	bc80      	pop	{r7}
 80004f2:	4770      	bx	lr

080004f4 <GPIO_ReadFromInputPin>:
}



uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80004f4:	b480      	push	{r7}
 80004f6:	b085      	sub	sp, #20
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
 80004fc:	460b      	mov	r3, r1
 80004fe:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber)& 0x00000001);		//LSB is extracted by shifting and masking then finally type cased
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	691a      	ldr	r2, [r3, #16]
 8000504:	78fb      	ldrb	r3, [r7, #3]
 8000506:	fa22 f303 	lsr.w	r3, r2, r3
 800050a:	b2db      	uxtb	r3, r3
 800050c:	f003 0301 	and.w	r3, r3, #1
 8000510:	73fb      	strb	r3, [r7, #15]
	return value;
 8000512:	7bfb      	ldrb	r3, [r7, #15]
}
 8000514:	4618      	mov	r0, r3
 8000516:	3714      	adds	r7, #20
 8000518:	46bd      	mov	sp, r7
 800051a:	bc80      	pop	{r7}
 800051c:	4770      	bx	lr

0800051e <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx,  uint16_t Value)
{
	pGPIOx->ODR= Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800051e:	b480      	push	{r7}
 8000520:	b083      	sub	sp, #12
 8000522:	af00      	add	r7, sp, #0
 8000524:	6078      	str	r0, [r7, #4]
 8000526:	460b      	mov	r3, r1
 8000528:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR^=(1<<PinNumber);
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	695b      	ldr	r3, [r3, #20]
 800052e:	78fa      	ldrb	r2, [r7, #3]
 8000530:	2101      	movs	r1, #1
 8000532:	fa01 f202 	lsl.w	r2, r1, r2
 8000536:	405a      	eors	r2, r3
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	615a      	str	r2, [r3, #20]
}
 800053c:	bf00      	nop
 800053e:	370c      	adds	r7, #12
 8000540:	46bd      	mov	sp, r7
 8000542:	bc80      	pop	{r7}
 8000544:	4770      	bx	lr

08000546 <delay>:


#include "stm32nul476rg.h"

void delay(void)
{
 8000546:	b480      	push	{r7}
 8000548:	b083      	sub	sp, #12
 800054a:	af00      	add	r7, sp, #0
	for(uint32_t i=0;i<50000/2;i++);
 800054c:	2300      	movs	r3, #0
 800054e:	607b      	str	r3, [r7, #4]
 8000550:	e002      	b.n	8000558 <delay+0x12>
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	3301      	adds	r3, #1
 8000556:	607b      	str	r3, [r7, #4]
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	f246 12a7 	movw	r2, #24999	@ 0x61a7
 800055e:	4293      	cmp	r3, r2
 8000560:	d9f7      	bls.n	8000552 <delay+0xc>
}
 8000562:	bf00      	nop
 8000564:	bf00      	nop
 8000566:	370c      	adds	r7, #12
 8000568:	46bd      	mov	sp, r7
 800056a:	bc80      	pop	{r7}
 800056c:	4770      	bx	lr
	...

08000570 <main>:
#define LOW 		0
#define BTN_PRESSED LOW


int main(void)
{
 8000570:	b580      	push	{r7, lr}
 8000572:	b086      	sub	sp, #24
 8000574:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed,GpioBtn;

	//led gpio configuration
	GpioLed.pGPIOx = GPIOA;
 8000576:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800057a:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800057c:	2305      	movs	r3, #5
 800057e:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConig.GPIO_PinMode = GPIO_MODE_OUT;
 8000580:	2301      	movs	r3, #1
 8000582:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000584:	2303      	movs	r3, #3
 8000586:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000588:	2300      	movs	r3, #0
 800058a:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConig.GPIO_PinPuPdContol = GPIO_NO_PUPD;
 800058c:	2300      	movs	r3, #0
 800058e:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000590:	2101      	movs	r1, #1
 8000592:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000596:	f7ff fe15 	bl	80001c4 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 800059a:	f107 030c 	add.w	r3, r7, #12
 800059e:	4618      	mov	r0, r3
 80005a0:	f7ff fede 	bl	8000360 <GPIO_Init>

	//button gpio configuration
	GpioBtn.pGPIOx = GPIOC;
 80005a4:	4b10      	ldr	r3, [pc, #64]	@ (80005e8 <main+0x78>)
 80005a6:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80005a8:	230d      	movs	r3, #13
 80005aa:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConig.GPIO_PinMode = GPIO_MODE_IN;
 80005ac:	2300      	movs	r3, #0
 80005ae:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80005b0:	2303      	movs	r3, #3
 80005b2:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConig.GPIO_PinPuPdContol = GPIO_NO_PUPD;
 80005b4:	2300      	movs	r3, #0
 80005b6:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOC, ENABLE);
 80005b8:	2101      	movs	r1, #1
 80005ba:	480b      	ldr	r0, [pc, #44]	@ (80005e8 <main+0x78>)
 80005bc:	f7ff fe02 	bl	80001c4 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 80005c0:	463b      	mov	r3, r7
 80005c2:	4618      	mov	r0, r3
 80005c4:	f7ff fecc 	bl	8000360 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13)== BTN_PRESSED)
 80005c8:	210d      	movs	r1, #13
 80005ca:	4807      	ldr	r0, [pc, #28]	@ (80005e8 <main+0x78>)
 80005cc:	f7ff ff92 	bl	80004f4 <GPIO_ReadFromInputPin>
 80005d0:	4603      	mov	r3, r0
 80005d2:	2b00      	cmp	r3, #0
 80005d4:	d1f8      	bne.n	80005c8 <main+0x58>
		{
			delay();
 80005d6:	f7ff ffb6 	bl	8000546 <delay>
			GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 80005da:	2105      	movs	r1, #5
 80005dc:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80005e0:	f7ff ff9d 	bl	800051e <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13)== BTN_PRESSED)
 80005e4:	e7f0      	b.n	80005c8 <main+0x58>
 80005e6:	bf00      	nop
 80005e8:	48000800 	.word	0x48000800

080005ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005ec:	480d      	ldr	r0, [pc, #52]	@ (8000624 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005f0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005f4:	480c      	ldr	r0, [pc, #48]	@ (8000628 <LoopForever+0x6>)
  ldr r1, =_edata
 80005f6:	490d      	ldr	r1, [pc, #52]	@ (800062c <LoopForever+0xa>)
  ldr r2, =_sidata
 80005f8:	4a0d      	ldr	r2, [pc, #52]	@ (8000630 <LoopForever+0xe>)
  movs r3, #0
 80005fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005fc:	e002      	b.n	8000604 <LoopCopyDataInit>

080005fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000600:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000602:	3304      	adds	r3, #4

08000604 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000604:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000606:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000608:	d3f9      	bcc.n	80005fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800060a:	4a0a      	ldr	r2, [pc, #40]	@ (8000634 <LoopForever+0x12>)
  ldr r4, =_ebss
 800060c:	4c0a      	ldr	r4, [pc, #40]	@ (8000638 <LoopForever+0x16>)
  movs r3, #0
 800060e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000610:	e001      	b.n	8000616 <LoopFillZerobss>

08000612 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000612:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000614:	3204      	adds	r2, #4

08000616 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000616:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000618:	d3fb      	bcc.n	8000612 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800061a:	f000 f811 	bl	8000640 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800061e:	f7ff ffa7 	bl	8000570 <main>

08000622 <LoopForever>:

LoopForever:
  b LoopForever
 8000622:	e7fe      	b.n	8000622 <LoopForever>
  ldr   r0, =_estack
 8000624:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000628:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800062c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000630:	080006a8 	.word	0x080006a8
  ldr r2, =_sbss
 8000634:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000638:	2000001c 	.word	0x2000001c

0800063c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800063c:	e7fe      	b.n	800063c <ADC1_2_IRQHandler>
	...

08000640 <__libc_init_array>:
 8000640:	b570      	push	{r4, r5, r6, lr}
 8000642:	4d0d      	ldr	r5, [pc, #52]	@ (8000678 <__libc_init_array+0x38>)
 8000644:	4c0d      	ldr	r4, [pc, #52]	@ (800067c <__libc_init_array+0x3c>)
 8000646:	1b64      	subs	r4, r4, r5
 8000648:	10a4      	asrs	r4, r4, #2
 800064a:	2600      	movs	r6, #0
 800064c:	42a6      	cmp	r6, r4
 800064e:	d109      	bne.n	8000664 <__libc_init_array+0x24>
 8000650:	4d0b      	ldr	r5, [pc, #44]	@ (8000680 <__libc_init_array+0x40>)
 8000652:	4c0c      	ldr	r4, [pc, #48]	@ (8000684 <__libc_init_array+0x44>)
 8000654:	f000 f818 	bl	8000688 <_init>
 8000658:	1b64      	subs	r4, r4, r5
 800065a:	10a4      	asrs	r4, r4, #2
 800065c:	2600      	movs	r6, #0
 800065e:	42a6      	cmp	r6, r4
 8000660:	d105      	bne.n	800066e <__libc_init_array+0x2e>
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f855 3b04 	ldr.w	r3, [r5], #4
 8000668:	4798      	blx	r3
 800066a:	3601      	adds	r6, #1
 800066c:	e7ee      	b.n	800064c <__libc_init_array+0xc>
 800066e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000672:	4798      	blx	r3
 8000674:	3601      	adds	r6, #1
 8000676:	e7f2      	b.n	800065e <__libc_init_array+0x1e>
 8000678:	080006a0 	.word	0x080006a0
 800067c:	080006a0 	.word	0x080006a0
 8000680:	080006a0 	.word	0x080006a0
 8000684:	080006a4 	.word	0x080006a4

08000688 <_init>:
 8000688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800068a:	bf00      	nop
 800068c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800068e:	bc08      	pop	{r3}
 8000690:	469e      	mov	lr, r3
 8000692:	4770      	bx	lr

08000694 <_fini>:
 8000694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000696:	bf00      	nop
 8000698:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800069a:	bc08      	pop	{r3}
 800069c:	469e      	mov	lr, r3
 800069e:	4770      	bx	lr
